image: docker-registry.dataflow.global:4443/infra/gradle:7-jdk11

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  NOTIFY_TIME: "10"
  NOTIFY_URL: "https://gitty.shop/gitty/gitlab/pipeline"


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - curl --header "PRIVATE-TOKEN:$CORE_API_TOKEN" "http://cm-dev.fisgroup.ru:8888/api/v4/projects/52/repository/files/gradle%2Eproperties/raw?ref=master" >> gradle.properties
  - curl --header "PRIVATE-TOKEN:$CORE_API_TOKEN" "http://cm-dev.fisgroup.ru:8888/api/v4/projects/52/repository/files/init%2Egradle%2Ekts/raw?ref=master" >> init.gradle.kts
  - rm -rf ../common-proto
  - git clone http://gitlab+deploy-token-1:$COMMON_PROTO_TOKEN@cm-dev.fisgroup.ru:8888/campaign-new-arch/common-proto.git ../common-proto

stages:
  - build
  - failure_notify
  - success_notify

build:
  stage: build
  script:
    - gradle clean publish -P gradle.properties --init-script init.gradle.kts -PARTIFACTORY_USER=$ARTIFACTORY_USER -PARTIFACTORY_PASS=$ARTIFACTORY_PASS
  
  
failure_notify:
  image: alpine
  stage: failure_notify
  when: on_failure
  script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - |
      curl --max-time $NOTIFY_TIME --location --request POST $NOTIFY_URL -H 'Content-Type: application/json' --data-raw '{ "status": "failed", "url": "'"$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"'", "mr": "'"$CI_MERGE_REQUEST_PROJECT_URL"'", "project_id": "'"$CI_PROJECT_ID"'"}' > /dev/null
success_notify:
  image: alpine
  stage: failure_notify
  when: on_success
  script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - |
      curl --max-time $NOTIFY_TIME --location --request POST $NOTIFY_URL -H 'Content-Type: application/json' --data-raw '{ "status": "success", "url": "'"$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"'", "mr": "'"$CI_MERGE_REQUEST_PROJECT_URL"'", "project_id": "'"$CI_PROJECT_ID"'"}' > /dev/null